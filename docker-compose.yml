version: "2"

services:
  mariadb:
    image: wodby/mariadb:10.1-2.1.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
    volumes:
#      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      - ./.persist/mysql:/var/lib/mysql # I want to manage volumes manually.
    labels:
      - 'traefik.backend=mariadb'
      - 'traefik.port=3306'
      - 'traefik.frontend.rule=Host:localhost'


  php:
# 2. Images without Drupal â€“ wodby/drupal-php:[PHP_VERSION]-[STABILITY_TAG].
    image: wodby/drupal-php:7.1-2.1.0
#    image: wodby/drupal-php:7.0-2.1.0
#    image: wodby/drupal-php:5.6-2.1.0
#    image: wodby/drupal-php:5.3-2.1.0
    environment:
      DOCKER_LOCAL: 1
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: mariadb
      DB_USER: drupal
      DB_PASSWORD: drupal
      DB_NAME: drupal
      DB_DRIVER: mysql
      PHP_XDEBUG: 1
      PHP_XDEBUG_DEFAULT_ENABLE: 1
      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0         # This is needed to respect remote.host setting bellow
      PHP_XDEBUG_REMOTE_HOST: "10.254.254.254"  # You will also need to 'sudo ifconfig lo0 alias 10.254.254.254'
      PHP_IDE_CONFIG: "serverName=drupal"       # Needed for xdebug for drush commands.
    volumes:
#     - ./:/var/www/html
      - ./.persist/public:/var/www/html/docroot/sites/default/files
      - ./.persist/private:/private
      - docker-sync:/var/www/html # Docker-sync for macOS users

  nginx:
# wodby/drupal-nginx:[DRUPAL_VERSION]-[NGINX_VERSION]-[STABILITY_TAG].
    image: wodby/drupal-nginx:8-1.10-2.1.0
#    image: wodby/drupal-nginx:7-1.10-2.1.0
#    image: wodby/drupal-nginx:6-1.10-2.1.0
    depends_on:
      - php
    environment:
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/docroot
    volumes:
#     - ./:/var/www/html
      - ./.persist/public:/var/www/html/docroot/sites/default/files
      - docker-sync:/var/www/html # Docker-sync for macOS users
    labels:
      - 'traefik.backend=nginx'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:localhost'

#  varnish:
#    image: wodby/drupal-varnish:4.1-2.1.0
#    depends_on:
#      - nginx
#    environment:
#      VARNISH_SECRET: secret
#      VARNISH_BACKEND_HOST: nginx
#      VARNISH_BACKEND_PORT: 80
#    labels:
#      - 'traefik.backend=varnish'
#      - 'traefik.port=6081'
#      - 'traefik.frontend.rule=Host:varnish.localhost'

  redis:
    image: wodby/redis:3.2-2.1.0

#  pma:
#    image: phpmyadmin/phpmyadmin
#    environment:
#      PMA_HOST: mariadb
#      PMA_USER: drupal
#      PMA_PASSWORD: drupal
#      PHP_UPLOAD_MAX_FILESIZE: 1G
#      PHP_MAX_INPUT_VARS: 1G
#    labels:
#      - 'traefik.backend=pma'
#      - 'traefik.port=80'
#      - 'traefik.frontend.rule=Host:pma.localhost'

  solr:
## wodby/drupal-solr:[DRUPAL_VERSION]-[SOLR_VERSION]-[STABILITY_TAG].
    image: wodby/drupal-solr:8-6.4-2.0.0
##    image: wodby/drupal-solr:8-6.3-2.0.0
##    image: wodby/drupal-solr:8-5.5-2.0.0
##    image: wodby/drupal-solr:7-6.4-2.0.0
##    image: wodby/drupal-solr:7-6.3-2.0.0
##    image: wodby/drupal-solr:7-5.5-2.0.0
    environment:
      SOLR_HEAP: 1024m
    labels:
      - 'traefik.backend=solr'
      - 'traefik.port=8983'
      - 'traefik.frontend.rule=Host:solr.localhost'

  mailhog:
    image: mailhog/mailhog
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.localhost'

#  node:
#    image: node:7-alpine
#    working_dir: /app
#    labels:
#      - 'traefik.backend=node'
#      - 'traefik.port=3000'
#      - 'traefik.frontend.rule=Host:front.localhost'
#    expose:
#      - "3000"
#    volumes:
#      - ./path/to/your/single-page-app:/app
#    command: sh -c 'npm install && npm run start'

#  memcached:
#    image: wodby/memcached:1.4-2.0.0

  traefik:
    image: traefik
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '80:80'
#      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

# PHP ssh connection. For Drush access.
  ssh:
    image: jeroenpeeters/docker-ssh
    environment:
      AUTH_MECHANISM: noAuth
      # COMPOSE_PROJECT_NAME is defined in the compose .env file.
      CONTAINER: ${COMPOSE_PROJECT_NAME}_php_1
      HTTP_ENABLED: 'false'
    ports:
      # Use local port 2223 for SSH connections.
      - '2223:22'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

# Docker-sync for macOS users
volumes:
  docker-sync:
    external:
      name: "${COMPOSE_PROJECT_NAME}-docker-sync"
